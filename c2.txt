Ejercicio 1. Analice el funcionamiento de cada una de las utilidades NET-SNMP (snmpconf,
snmpdelta, snmpdf, snmpnetstat, snmptranslate, snmpset, snmpstatus, ...). Proponga y resuelva un
ejemplo concreto para cada utilidad.
A continuación, se resumen brevemente todas las utilidades NET-SNMP seguidos de un comando
en el que se haga uso:
snmp-bridge-mib: Aporta información sobre los puentes en un sistema Linux.
perl /usr/bin/snmp-bridge-mib br0
snmpbulkget: Usa la primitiva GetBulkRequest. Igual que GetNextRequest pero más eficiente y
rápido (ya que permite solicitar por ejemplo la totalidad de una tabla).
snmpbulkget -v2c -Cn1 -Cr5 -Os -c public zeus system ifTable
snmpbulkwalk: Igual que snmpwalk, pero usando peticiones GetBulkRequest.
snmpbulkwalk -v1 -c public 192.168.1.2 .1.3.6.1.2.1.25
snmpcheck: Muestra información de los dispositivos SNMP.
snmpcheck 192.168.1.2 -c public
snmpconf: Permite crear y modificar los archivos de configuración.
snmpconf -g basic_setup
snmpdelta: Monitorea diferencias delta en valores Counter SNMP.
snmpdelta -c public -v 1 -Cs localhost IF-MIB::ifInUcastPkts.3 IF-MIB::ifOutUcastPkts.3
snmpdf:Muestra el espacio de disco usado.
snmpdf -v 2c -c public localhost
snmpget: Usa la primitiva GetRequest. Obtiene el dato del OID.
snmpget -v1 -c public <ip> .1.3.6.1.2.1.25.2.3.1.6.1
snmpgetnext: Usa la primitiva GetNextRequest. Obtiene un dato desconocido indexado.
snmpgetnext -v1 -c public <ip> .1.3.6.1.2.1.25.2.3.1.6.1
snmpinform: Envia una notificación SNMP al manager. Es similar a snmptrap con la diferencia de
que envía un INFORM-PDU y espera una respuesta (esto mismo se puede hacer con la opción -Ci
de snmptrap).
snmpinform -v 3 -u myuser -a MD5 -A mypassword -l authNoPriv localhost 42 coldStart.0
snmpnetstat: Muestra el estado de red y la información de configuración de una entidad de red.
snmpnetstat -v 2c -c public -Ca testhost
snmpset: Usa la primitiva Set. Envía información de respuesta.
snmpset -v1 -c public <ip> .1.3.6.1.2.1.2.2.1.7.1 i 1 (siendo i el tipo de dato: int)
snmpstatus: Devuelve información de gestión de una entidad de red.
snmpstatus -c public -v 1 netdev-kbox.cc.cmu.edu
snmptable: Muestra la tabla indicada.
snmptable -v1 -c public 192.168.1.2 .1.3.6.1.2.1.2.2
4
snmptest: Permite comunicarse con una entidad de red usando peticiones SNMP
snmptest -c public -v 1 zeus
snmptranslate: Traduce OIDs de la MIB de la forma numérica a la textual y viceversa.
snmptranslate .1.3.6.1.2.1.20
snmptrap: Envía la primitiva Trap, que funcionan como notificaciones de los agentes al gestor.
snmptrap -v 2c -c public localhost '' NET-SNMP-EXAMPLES
MIB::netSnmpExampleHeartbeatNotification netSnmpExampleHeartbeatRate i 123456
snmpusm: Crea y gestiona usuarios SNMPv3 en una entidad de red.
snmpusm delete USER
snmpvacm: Crea y gestiona usuarios SNMPv3 de tipo VACM en una entidad de red.
snmpvacm localhost createSec2Group 3 dave RWGroup
snmpvacm localhost createView all .1 80
snmpvacm localhost createAccess RWGroup 3 1 1 all all none
snmpwalk: Devuelve toda la información del árbol enrutado en el OID especificado (encadena
automáticamente peticiones GETNEXT).
snmpwalk -v1 -c public 192.168.1.2 .1.3.6.1.2.1.25

Ejercicio 2. Compare el funcionamiento de snmpwalk y snmpbulkwalk. Emplee ambos comandos
para recorrer la MIB o alguno de sus grupos. De los datos obtenidos deduzca algunas conclusiones.
Como hemos dicho antes la diferencia entre ambos comandos se basa en que snmpwalk hace uso de
peticiones GetNextRequest y snmpbulkwalk de GetBulkRequest y esta última es mucho más
eficiente en cuanto al número de paquetes SNMP transmitidos.
Esto lo podemos comprobar analizando los paquetes enviados con la herramienta Wireshark.
Analizando la red correspondiente y aplicando el filtro SNMP para visualizar solo los paquetes que
nos interesan, ejecutaremos los siguientes comandos:
snmpwalk -v2c -c public <ip> 1.3.6.1.2.1
snmpbulkwalk -v2c -c public <ip> 1.3.6.1.2.1
Como se ve en el comando solo se pedirá una parte de la MIB, en concreto toda la mib-2. Además,
se ha realizado con la versión 2c, ya que la 1 no tiene el comando snmpbulkwalk.
Los resultados son 31894 paquetes con snmpwalk y 3205 con snmpbulkwalk, por lo que se
claramente la diferencia entre ambos. En conreto, snmpbulkwalk es aproximadamente un 100% más
eficiente que snmpwalk.

Ejercicio 3. Cree estadísticas con el porcentaje de paquetes icmp, ip, snmp, tcp y udp que circulan
por la red. De los datos obtenidos deduzca algunas conclusiones.
En todos los casos el procedimiento es similar. Debemos primero obtener el número de paquetes
total circulando en un periodo de tiempo. Tras esto, obtendremos el número de paquetes del
protocolo que queramos controlar, tanto de entrada como de salida, y los sumaremos. Con todos
estos datos ya podremos calcular el porcentaje de paquetes del protocolo.
5
El número total de paquetes que pasan por una interfaz (aquí pondré el ejemplo del loopback
127.0.0.1) de un sistema es la suma de los OIDs:
snmpget -v1 -c public 127.0.0.1 1.3.6.1.2.1.2.2.1.11.1 (ifInUcastPkts)
snmpget -v1 -c public 127.0.0.1 1.3.6.1.2.1.2.2.1.12.1 (ifInNUcastPkts)
snmpget -v1 -c public 127.0.0.1 1.3.6.1.2.1.2.2.1.13.1 (ifInDiscards)
snmpget -v1 -c public 127.0.0.1 1.3.6.1.2.1.2.2.1.14.1 (ifInErrors)
snmpget -v1 -c public 127.0.0.1 1.3.6.1.2.1.2.2.1.15.1 (ifInUnknownProtos)
También podríamos usar la herramienta Wireshark para capturar el número total de paquetes y
filtrar por protocolo para saber cuantos paquetes de cada tipo hay.
Se han capturado 12604 paquetes en total tras estar generando tráfico de diferente tipo en un
periodo de tiempo de un minuto aproximadamente.